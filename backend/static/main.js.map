{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/node/elevation.directive.ts","./src/app/node/file/file.component.ts","./src/app/node/file/file.component.html","./src/app/node/folder/folder.component.ts","./src/app/node/folder/folder.component.html","./src/app/node/gallery-modal/gallery-modal.component.ts","./src/app/node/gallery-modal/gallery-modal.component.html","./src/app/node/models/File.ts","./src/app/node/models/FileType.ts","./src/app/node/models/Folder.ts","./src/app/node/node.component.ts","./src/app/node/node.component.html","./src/app/node/node.service.ts","./src/app/notification.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {NodeComponent} from \"./node/node.component\";\nimport {GalleryModalComponent} from \"./node/gallery-modal/gallery-modal.component\";\n\nconst routes: Routes = [\n  {path: '', component: NodeComponent, pathMatch: 'full'},\n  {\n    path: ':folderName',\n    component: NodeComponent,\n    children: [\n      { path: 'file/:fileId', component: GalleryModalComponent, }\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","<div class=\"content\" role=\"main\">\n  <section class=\"app-container\">\n    <header>\n      <mat-toolbar color=\"primary\">\n        <span routerLink=\"/\" [style.cursor]=\"'pointer'\">Media Viewer</span>\n      </mat-toolbar>\n    </header>\n    <section class=\"content-container\">\n      <router-outlet></router-outlet>\n    </section>\n  </section>\n</div>\n\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatGridListModule} from \"@angular/material/grid-list\";\nimport {SwiperModule} from \"swiper/angular\";\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NodeComponent} from './node/node.component';\nimport {FileComponent} from './node/file/file.component';\nimport {FolderComponent} from './node/folder/folder.component';\nimport {ElevationDirective} from './node/elevation.directive';\nimport { GalleryModalComponent } from './node/gallery-modal/gallery-modal.component';\nimport {MatDialogModule} from \"@angular/material/dialog\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NodeComponent,\n    FileComponent,\n    FolderComponent,\n    ElevationDirective,\n    GalleryModalComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        MatIconModule,\n        MatToolbarModule,\n        MatButtonModule,\n        MatSidenavModule,\n        MatListModule,\n        MatSnackBarModule,\n        HttpClientModule,\n        MatGridListModule,\n        MatCardModule,\n        SwiperModule,\n        MatDialogModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Directive, ElementRef, HostListener, Input, OnChanges, Renderer2, SimpleChanges} from '@angular/core';\n\n@Directive({\n  selector: '[appElevation]'\n})\nexport class ElevationDirective implements OnChanges {\n\n  @Input()\n  defaultElevation = 2;\n\n  @Input()\n  raisedElevation = 8;\n\n  constructor(\n    private element: ElementRef,\n    private renderer: Renderer2\n  ) {\n    this.setElevation(this.defaultElevation);\n  }\n\n  ngOnChanges(_changes: SimpleChanges) {\n    this.setElevation(this.defaultElevation);\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter() {\n    this.setElevation(this.raisedElevation);\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave() {\n    this.setElevation(this.defaultElevation);\n  }\n\n  setElevation(amount: number) {\n    Array\n      .from((<HTMLElement>this.element.nativeElement).classList)\n      .filter(c => c.startsWith('mat-elevation-z'))\n      .forEach(c => this.renderer.removeClass(this.element.nativeElement, c));\n\n    const newClass = `mat-elevation-z${amount}`;\n    this.renderer.addClass(this.element.nativeElement, newClass);\n  }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {MatDialog} from \"@angular/material/dialog\";\n\nimport {IFile} from \"../models/File\";\nimport {GalleryModalComponent} from \"../gallery-modal/gallery-modal.component\";\n\n@Component({\n  selector: 'app-file',\n  templateUrl: './file.component.html',\n  styleUrls: ['./file.component.scss']\n})\nexport class FileComponent implements OnInit {\n\n  @Input() file!: IFile;\n\n  constructor(private readonly dialog: MatDialog) { }\n\n  ngOnInit(): void { }\n\n  openModal() {\n    this.dialog.open(GalleryModalComponent, {\n      maxHeight: '100vh',\n      maxWidth: '100vw',\n      height: '80%',\n      width: '80%',\n    });\n  }\n}\n","<mat-card appElevation (click)=\"openModal()\">\n  <mat-card-title-group>\n    <img mat-card-lg-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\">\n  </mat-card-title-group>\n  <mat-card-content>\n    {{ file.title }}\n  </mat-card-content>\n</mat-card>\n\n","import {Component, Input, OnInit} from '@angular/core';\n\nimport {IFolder} from \"../models/Folder\";\n\n@Component({\n  selector: 'app-folder',\n  templateUrl: './folder.component.html',\n  styleUrls: ['./folder.component.scss']\n})\nexport class FolderComponent implements OnInit {\n\n  @Input() folder!: IFolder;\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n}\n","<mat-card [routerLink]=\"[folder.name]\" appElevation>\n  <mat-card-title-group>\n    <img mat-card-lg-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\">\n  </mat-card-title-group>\n  <mat-card-footer>\n    {{ folder.name }}\n  </mat-card-footer>\n</mat-card>\n","import {Component, OnDestroy, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {map, Observable, Subject, takeUntil, tap} from \"rxjs\";\nimport SwiperCore, {FreeMode, Lazy, Navigation, Keyboard} from \"swiper\";\nimport {SwiperComponent} from \"swiper/angular\";\n\nimport {environment} from \"../../../environments/environment\";\nimport {IFile} from \"../models/File\";\nimport {NodeService} from \"../node.service\";\n\nSwiperCore.use([Lazy, FreeMode, Navigation, Keyboard]);\n\n@Component({\n  selector: 'app-gallery-modal',\n  templateUrl: './gallery-modal.component.html',\n  styleUrls: ['./gallery-modal.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GalleryModalComponent implements OnInit, OnDestroy {\n\n  @ViewChild('swiper', {static: true}) swiper?: SwiperComponent;\n\n  public readonly baseUrl: string = environment.baseUrl;\n  public readonly currentFolder$: Observable<string> = this.nodeService.currentFolderSub$.asObservable();\n\n  private readonly destroyed$: Subject<void> = new Subject<void>();\n\n  public files: IFile[] = [];\n  public thumbsSwiper?: any;\n\n  constructor(private readonly nodeService: NodeService) { }\n\n  ngOnInit(): void {\n    this.nodeService.filesSub$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(files => {\n      this.files = files as IFile[];\n    });\n  }\n\n  openFile(fileId: number, type: string): void {\n    this.nodeService.getFileBlob(fileId, type + \"; charset=utf-8\")\n      .pipe(\n        takeUntil(this.destroyed$),\n        map(blob => URL.createObjectURL(blob)),\n        tap(dataObj => window.open(dataObj, '_blank'))\n      )\n      .subscribe({});\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n","<div mat-dialog-title class=\"dialog-title\">\n  <h3>{{ currentFolder$ | async }}</h3>\n  <button mat-icon-button aria-label=\"close dialog\" mat-dialog-close=\"true\">\n    <mat-icon>close</mat-icon>\n  </button>\n</div>\n\n<mat-dialog-content>\n\n  <swiper\n    #swiper\n    style=\"--swiper-navigation-color: #fff;--swiper-pagination-color: #fff\"\n    [spaceBetween]=\"10\"\n    [lazy]=\"true\"\n    [navigation]=\"true\"\n    [mousewheel]=\"true\"\n    [keyboard]=\"{\n      enabled: true\n    }\"\n    [pagination]=\"{\n      clickable: true\n    }\"\n    [thumbs]=\"{ swiper: thumbsSwiper }\"\n    noSwipingClass=\"swiper-no-swiping\"\n    class=\"mySwiper2\"\n  >\n    <ng-template swiperSlide *ngFor=\"let file of files\" [ngSwitch]=\"true\">\n      <img\n        [attr.data-src]=\"baseUrl + '/' + (currentFolder$ | async) + '/' + file.id\"\n        [alt]=\"file.title\"\n        *ngSwitchCase=\"file.m_type.includes('image/')\"\n        class=\"swiper-lazy\"\n      />\n      <video\n        *ngSwitchCase=\"file.m_type.includes('video/')\"\n        [attr.data-poster]=\"baseUrl + '/' + (currentFolder$ | async) + '/' + file.id\"\n        [attr.data-src]=\"baseUrl + '/' + (currentFolder$ | async) + '/' + file.id\"\n        autoplay=\"false\"\n        preload=\"none\"\n        muted=\"muted\"\n        playsinline=\"\"\n        controls\n        class=\"swiper-lazy\"\n      >\n        <source\n          [attr.data-src]=\"baseUrl + '/' + (currentFolder$ | async) + '/' + file.id\"\n          [type]=\"file.m_type\"\n        />\n        Browser not supported\n      </video>\n      <audio controls *ngSwitchCase=\"file.m_type.includes('audio/')\">\n        <source\n          [src]=\"baseUrl + '/' + (currentFolder$ | async) + '/' + file.id\"\n          [type]=\"file.m_type\"\n        />\n        Your browser does not support the audio element.\n      </audio>\n      <div *ngSwitchDefault>\n        <h4>{{ file.title }}</h4>\n        <button\n          mat-raised-button\n          color=\"accent\"\n          (click)=\"openFile(file.id, file.m_type)\"\n        >\n          <mat-icon>file_download</mat-icon>\n          Download File\n        </button>\n      </div>\n    </ng-template>\n  </swiper>\n\n</mat-dialog-content>\n","export interface IFile {\n  id: number;\n  title: string;\n  m_type: string;\n}\n\nexport class File implements IFile{\n  id: number;\n  title: string;\n  m_type: string;\n\n  constructor(data: [number, string, string]) {\n    [this.id, this.title, this.m_type] = data;\n  }\n\n}\n","export enum FileType {\n  File,\n  Folder\n}\n","export interface IFolder {\n  name: string;\n}\n\nexport class Folder implements IFolder{\n  name: string;\n\n  constructor(folder: [string]) {\n    [this.name] = folder;\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {BreakpointObserver, Breakpoints} from \"@angular/cdk/layout\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {map, Observable, shareReplay} from \"rxjs\";\n\nimport {NodeService} from \"./node.service\";\nimport {IFolder} from \"./models/Folder\";\nimport {IFile} from \"./models/File\";\n\n@Component({\n  selector: 'app-node',\n  templateUrl: './node.component.html',\n  styleUrls: ['./node.component.scss']\n})\nexport class NodeComponent implements OnInit {\n\n  public readonly files$: Observable<(IFolder | IFile)[]> = this.nodeService.filesSub$.asObservable();\n  public readonly isFiles$: Observable<boolean> = this.nodeService.isFilesSub$.asObservable();\n  public readonly cols$!: Observable<number>;\n\n  public readonly gridColsByBreakpoint = new Map([\n    [Breakpoints.XSmall, 1],\n    [Breakpoints.Small, 2],\n    [Breakpoints.Medium, 4],\n    [Breakpoints.Large, 6],\n    [Breakpoints.XLarge, 8],\n  ]);\n\n  constructor(private readonly route: ActivatedRoute,\n              private readonly nodeService: NodeService,\n              private readonly breakpointObserver: BreakpointObserver) {\n    this.cols$ = this.breakpointObserver\n      .observe([\n        Breakpoints.XSmall,\n        Breakpoints.Small,\n        Breakpoints.Medium,\n        Breakpoints.Large,\n        Breakpoints.XLarge\n      ])\n      .pipe(\n        map(result => {\n            for (const [query, cols] of this.gridColsByBreakpoint.entries())\n              if (result.breakpoints[query]) return cols;\n            return 4;\n          }\n        ),\n        shareReplay()\n      )\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap\n      .subscribe(params => {\n          if (!params.has('folderName')) this.nodeService.getFolders();\n          else {\n            const folderName = params.get('folderName');\n            this.nodeService.getFiles(folderName || '');\n            if (folderName) this.nodeService.currentFolderSub$.next(folderName);\n          }\n        }\n      )\n  }\n\n}\n","<mat-grid-list [cols]=\"cols$ | async\" rowHeight=\"11:10\">\n  <mat-grid-tile *ngFor=\"let file of $any(files$) | async\">\n    <ng-container *ngIf=\"isFiles$ | async\">\n      <app-file [file]=\"file\"></app-file>\n    </ng-container>\n    <ng-container *ngIf=\"!(isFiles$ | async)\">\n      <app-folder [folder]=\"file\"></app-folder>\n    </ng-container>\n  </mat-grid-tile>\n</mat-grid-list>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {BehaviorSubject, map, Observable, tap} from \"rxjs\";\n\nimport {environment} from \"../../environments/environment\";\nimport {NotificationService} from \"../notification.service\";\nimport {Folder, IFolder} from \"./models/Folder\";\nimport {File, IFile} from \"./models/File\";\nimport {FileType} from \"./models/FileType\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NodeService {\n\n  private readonly baseUrl: string = environment.baseUrl;\n\n  public readonly filesSub$: BehaviorSubject<(IFile | IFolder)[]> = new BehaviorSubject<(IFile | IFolder)[]>([]);\n  public readonly isFilesSub$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n  public readonly currentFolderSub$: BehaviorSubject<string> = new BehaviorSubject('');\n\n  constructor(private readonly httpClient: HttpClient,\n              private readonly notificationService: NotificationService) {\n  }\n\n  public getFolders(): void {\n    this.httpClient.get<[string][]>(`${this.baseUrl}/`)\n      .pipe(\n        map(folders => folders.map(folderData => NodeService._filesFactory(FileType.Folder, folderData))),\n        tap(folders => this.filesSub$.next(folders)),\n        tap(() => this.isFilesSub$.next(false)),\n      ).subscribe({\n      error: (err) => {\n        this.notificationService.error(NodeService._getErrorMsg(err));\n        this.filesSub$.next([]);\n      }\n    });\n  }\n\n  public getFiles(folderName: string): void {\n    this.httpClient.get<[number, string, string][]>(`${this.baseUrl}/${folderName}`)\n      .pipe(\n        map(files => files.map(fileData => NodeService._filesFactory(FileType.File, fileData))),\n        tap(files => this.filesSub$.next(files)),\n        tap(() => this.isFilesSub$.next(true)),\n      ).subscribe({\n      error: (err) => {\n        this.notificationService.error(NodeService._getErrorMsg(err));\n        this.filesSub$.next([]);\n      }\n    });\n  }\n\n  public getFileBlob(fileId: number, type: string): Observable<Blob> {\n    return this.httpClient.get<Blob>(`${this.baseUrl}/${this.currentFolderSub$.value}/${fileId}`, {responseType: 'blob' as 'json'})\n      .pipe(\n        map(data => new Blob([data], {type}))\n      );\n  }\n\n  private static _filesFactory(type: FileType, args: [string] | [number, string, string]): IFile | IFolder {\n    switch (type) {\n      case FileType.File:\n        return new File(args as [number, string, string]);\n      case FileType.Folder:\n        return new Folder(args as [string]);\n    }\n  }\n\n  private static _getErrorMsg(err?: any): string {\n    return err?.error['detail'] || err?.message || 'Unknown error!';\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {MatSnackBar, MatSnackBarConfig} from \"@angular/material/snack-bar\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  private config: MatSnackBarConfig = {\n    duration: 3000,\n    horizontalPosition: \"center\",\n    verticalPosition: \"bottom\",\n  };\n\n  constructor(private readonly snackBar: MatSnackBar) { }\n\n  private _changeClasses(classList: string[]): void {\n    this.config.panelClass = classList;\n  }\n\n  public success(msg: string): void {\n    this._changeClasses(['success', 'notification']);\n    this.snackBar.open(msg, 'Close', this.config);\n  }\n\n  public error(msg: string): void {\n    this._changeClasses(['error', 'notification']);\n    this.snackBar.open(msg, 'Close', this.config);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://127.0.0.1:8000/api',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["map","Subject","takeUntil","tap","SwiperCore","FreeMode","Lazy","Navigation","Keyboard","environment","i0","ctx_r5","file_r2","use","GalleryModalComponent","constructor","nodeService","baseUrl","currentFolderSub$","asObservable","ngOnInit","filesSub$","pipe","destroyed$","subscribe","files","openFile","fileId","type","getFileBlob","blob","URL","createObjectURL","dataObj","window","open","ngOnDestroy","next","complete","selectors","viewQuery","Breakpoints","shareReplay","NodeComponent","route","breakpointObserver","isFilesSub$","Map","XSmall","Small","Medium","Large","XLarge","cols$","observe","result","query","cols","gridColsByBreakpoint","entries","breakpoints","paramMap","params","has","getFolders","folderName","get","getFiles","decls","vars","consts","template"],"sourceRoot":"webpack:///"}